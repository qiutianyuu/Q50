name: microauto

on:
  workflow_dispatch:          # 手动触发
  schedule:
    - cron: '0 2 * * *'       # UTC 每天 02:00
  push:
    branches: [ main ]

jobs:
  backtest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare dummy features
        run: |
          python - << 'PY'
          import pandas as pd, numpy as np, pathlib, random
          pathlib.Path('data').mkdir(exist_ok=True)
          n = 1000
          # 构造随机游走价格序列，确保涨跌都有
          prices = [1000]
          for _ in range(1, n):
              prices.append(prices[-1] * (1 + random.uniform(-0.002, 0.002)))
          df = pd.DataFrame({
              'timestamp': pd.date_range('2025-01-01', periods=n, freq='min'),
              'mid_price': prices,
              'rel_spread': np.full(n, 0.0005)
          })
          df.to_parquet('data/realtime_features_dummy.parquet', index=False)
          print('Dummy features saved:', len(df))
          PY

      - name: Generate labels
        run: |
          python generate_micro_labels.py \
            --input data/realtime_features_dummy.parquet \
            --horizon 120 --alpha 0.3 --mode maker \
            --output data/labels.parquet

      - name: Train model
        run: |
          python train_micro_xgb.py \
            --features data/labels.parquet \
            --model-out xgb_model.bin \
            --label-col label_h120_a0.3_maker \
            --trials 25

      - name: Run backtest
        run: |
          python micro_backtest_maker.py \
            --model xgb_model.bin \
            --features data/labels.parquet \
            --json-out backtest_results.json

      - name: Select best parameters
        run: |
          python scripts/select_best.py backtest_results.json --metric sharpe > best_params.yaml

      - name: Update config
        run: |
          mkdir -p config
          cp best_params.yaml config/micro_best.yaml

      - name: Commit and push
        run: |
          git config user.name "micro-bot"
          git config user.email "bot@users.noreply.github.com"
          git add config/micro_best.yaml
          git commit -m "auto: update micro_best params" || echo "No changes"
          git push

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backtest-${{ github.run_number }}
          path: |
            backtest_results.json
            best_params.yaml
            xgb_model.bin 